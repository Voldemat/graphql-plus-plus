enum ENotificationTargetType {
    USER
    PRODUCT
    SERVICE
    COMMENT
    PUBLICATION
    CHAT
    STORY
    ARTICLE
    ALBUM
}

enum ENotificationType {
    NEW_FOLLOWER
    NEW_MESSAGE
    NEW_LIKE
    NEW_COMMENT
    NEW_MENTION
    CONTENT_IS_BLOCKED
    NEW_CONTENT
    NEW_REACTION
}

enum ENotificationFilterType {
    ALL
    COMMENTS
    FOLLOWERS
    LIKES
}

interface INotification {
    id: String!
    type: ENotificationType!
    text: String!
    createdAt: String!
}

type ContentNotification implements INotification {
    id: String!
    type: ENotificationType!
    text: String!
    author: User
    cover: File
    createdAt: String!
    targetId: String!
    targetType: ENotificationTargetType! 
}

type TechSupNotification implements INotification {
    id: String!
    type: ENotificationType!
    text: String!
    createdAt: String!
}

union Notification = ContentNotification | TechSupNotification

type NotificationList {
    total: Int!
    notifications: [Notification!]!
}

type NotificationSettings {
    pushNotificationsEnabled: Boolean!
    emailNotificationsEnabled: Boolean!
    platformNewsEnabled: Boolean!
}

input NotificationSettingsIn {
    pushNotificationsEnabled: Boolean!
    emailNotificationsEnabled: Boolean!
    platformNewsEnabled: Boolean!
}

input UserNotificationSettingsIn {
    publications: Boolean!
    stories: Boolean!
    albums: Boolean!
    catalog: Boolean!
    blog: Boolean!
}

type UserNotificationSettings {
    publications: Boolean!
    stories: Boolean!
    albums: Boolean!
    catalog: Boolean!
    blog: Boolean!
}

union NotificationListOrBE = NotificationList | BaseError
union NotificationSettingsOrBE = NotificationSettings | BaseError
union NumberObjectOrBE = NumberObject | BaseError
union UserNotificationSettingsOrBE = UserNotificationSettings | BaseError

extend type Query {
    getUserNotificationSettings(id: String!): UserNotificationSettingsOrBE!
    getNotifications(filterBy: ENotificationFilterType! = ALL, skip: Int! = 0, limit: Int! = 20): NotificationListOrBE!
    getUnreadNotificationsCount: NumberObjectOrBE!
    getNotificationSettings: NotificationSettingsOrBE!
}

extend type Mutation {
    setUserNotificationSettings(id: String!, settings: UserNotificationSettingsIn!): BaseError
    setNotificationSettings(settings: NotificationSettingsIn!): BaseError
}
