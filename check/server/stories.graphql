enum StoryPalette {
  WHITE
  BLACK
  BLUE
  GREEN
  YELLOW
  ORANGE
  RED
  PURPLE
  DARKPURPLE
}

type Story {
  file: File!
  attachmentPosition: StoryObjectPosition!
  privacy: PrivacyType!
  objects: [StoryObject!]!
  id: String!
  isLiked: Boolean!
  createdAt: String!
  updatedAt: String!
  user: User!
  isWatched: Boolean!
  isSaved: Boolean!
}

type StoryObjectPosition {
  x: Float!
  y: Float!
  angle: Float!
  scale: Float!
}

input StoryObjectPositionIn {
  x: Float!
  y: Float!
  angle: Float!
  scale: Float!
}

input StoryGeolocationCoordinateIn {
  lat: Float!
  lng: Float!
  address: String!
  backgroundColor: StoryPalette
}

type StoryGeolocationCoordinate {
  backgroundColor: StoryPalette
  address: String!
  lat: Float!
  lng: Float!
}

input StoryTextIn {
  backgroundColor: StoryPalette
  position: StoryObjectPositionIn!
  textColor: StoryPalette!
  fontSize: String!
  font: String!
  value: String!
}

input StoryGeolocationIn {
  backgroundColor: StoryPalette
  position: StoryObjectPositionIn!
  coordinate: StoryGeolocationCoordinateIn!
}

input StoryProductLinkIn {
  backgroundColor: StoryPalette
  position: StoryObjectPositionIn!
  productId: String!
  textColor: StoryPalette!
}

input StoryUserReferenceIn {
  backgroundColor: StoryPalette
  position: StoryObjectPositionIn!
  userId: String!
  textColor: StoryPalette!
}

input StoryLinkIn {
  backgroundColor: StoryPalette
  position: StoryObjectPositionIn!
  link: String!
  linkName: String!
  textColor: StoryPalette!
  isAccountLinkMatched: Boolean!
}

type StoryText {
  backgroundColor: StoryPalette
  position: StoryObjectPosition!
  textColor: StoryPalette!
  fontSize: String!
  font: String!
  value: String!
}

type StoryProductLink {
  backgroundColor: StoryPalette
  position: StoryObjectPosition!
  textColor: StoryPalette!
  product: Product
}

type StoryUserReference {
  backgroundColor: StoryPalette
  position: StoryObjectPosition!
  userId: String!
  name: String!
  login: String!
  textColor: StoryPalette!
}

type StoryLink {
  backgroundColor: StoryPalette
  position: StoryObjectPosition!
  link: String!
  linkName: String!
  textColor: StoryPalette!
  isAccountLinkMatched: Boolean!
}

type StoryGeolocation {
  backgroundColor: StoryPalette
  position: StoryObjectPosition!
  coordinate: StoryGeolocationCoordinate!
}

union StoryObject =
    StoryText
  | StoryProductLink
  | StoryUserReference
  | StoryGeolocation
  | StoryLink

input StoryObjectIn {
    text: StoryTextIn
    link: StoryLinkIn
    productLink: StoryProductLinkIn
    userReference: StoryUserReferenceIn
    geolocation: StoryGeolocationIn
}

input StoryIn {
  attachmentPosition: StoryObjectPositionIn!
  attachmentId: String!
  privacy: PrivacyType!
  objects: [StoryObjectIn!]!
}

type StoryFeed {
  author: User!
  stories: [Story!]!
}

type StoryFeedList {
  total: Int!
  items: [StoryFeed!]!
}

type StoriesList {
    total: Int!
    stories: [Story!]!
}

union GetRecentStoriesOrBE = BaseError | StoryFeedList
union RetrieveStoryOrBE = BaseError | Story
union GetUserStoriesOrBE = StoryFeed | BaseError
union HasNewStoriesOrBE = BaseError | BooleanObject
union CreateStoryOrEWF = ErrorWithFields | Story
union StoriesListOrBE = StoriesList | BaseError

extend type Query {
  hasNewStories(userId: String!): HasNewStoriesOrBE!
  getUserStories(userId: String!): GetUserStoriesOrBE!
  retrieveStory(id: String!): RetrieveStoryOrBE!
  getRecentStories: GetRecentStoriesOrBE!
  getSavedStories(userId: String!, skip: Int! = 0, limit: Int! = 20): StoriesListOrBE!
}

extend type Mutation {
  createStory(story: StoryIn!): CreateStoryOrEWF!
  deleteStory(id: String!): BaseError
  saveStory(id: String!): BaseError
  unsaveStory(id: String!): BaseError
}
